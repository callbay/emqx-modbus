{mapping, "modbus.company", "emq_modbus.company", [
  {datatype, string},
  {default, "companyX"}
]}.

{mapping, "modbus.edgename", "emq_modbus.edgename", [
  {datatype, string}
]}.

{mapping, "modbus.device.$index", "emq_modbus.device", [
  {datatype, string}
]}.


{translation,
 "emq_modbus.device",
  fun(Conf) ->
      Names = cuttlefish_variable:filter_by_prefix("modbus.device", Conf),
      lists:foldl(fun({_, DevString}, Acc) ->
                      case string:tokens(DevString, ", \t") of
                          [Name, IP, Port] ->
                                InetPort = list_to_integer(Port),
                                [{IP, InetPort, Name}|Acc];
                           X -> Acc
                      end
                  end,
                  [], Names)
  end
}.



