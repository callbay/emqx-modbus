{mapping, "modbus.mode", "emqx_modbus.mode", [
  {datatype, integer},
  {default, 0}
]}.

{mapping, "modbus.company", "emqx_modbus.company", [
  {datatype, string},
  {default, "companyX"}
]}.

{mapping, "modbus.keepalive", "emqx_modbus.keepalive", [
  {datatype, integer},
  {default, 120}
]}.

{mapping, "modbus.handler", "emqx_modbus.handler", [
  {datatype, atom}
]}.


{mapping, "modbus.port", "emqx_modbus.port", [
  {datatype, integer},
  {default, 502}
]}.


{mapping, "modbus.device.$index", "emqx_modbus.device", [
  {datatype, string}
]}.

{translation, "emqx_modbus.device", fun(Conf) ->
    Names = cuttlefish_variable:filter_by_prefix("modbus.device", Conf),
    lists:foldl(fun({_, DevString}, Acc) ->
                    case string:tokens(DevString, ", \t") of
                        [Name, IP, Port] ->
                            InetPort = list_to_integer(Port),
                            [{IP, InetPort, Name}|Acc];
                        X -> Acc
                    end
                end, [], Names)
    end}.
